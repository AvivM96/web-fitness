// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web_fitness.Data;

namespace web_fitness.Migrations
{
    [DbContext(typeof(fitnessdataContext))]
    [Migration("20200717094549_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("web_fitness.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<string>("CustomerCity")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<string>("CustomerGender")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("web_fitness.Models.Meeting", b =>
                {
                    b.Property<int>("MeetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MeetDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TrainerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrainingTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("MeetID");

                    b.HasIndex("TrainerID");

                    b.HasIndex("TrainingTypeID");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("web_fitness.Models.Trainer", b =>
                {
                    b.Property<int>("TrainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerGender")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerPhone")
                        .HasColumnType("TEXT");

                    b.HasKey("TrainerId");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("web_fitness.Models.TrainingType", b =>
                {
                    b.Property<int>("TrainingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.HasKey("TrainingTypeId");

                    b.ToTable("TrainingTypes");
                });

            modelBuilder.Entity("web_fitness.Models.Meeting", b =>
                {
                    b.HasOne("web_fitness.Models.Trainer", "Trainer")
                        .WithMany("Meeting")
                        .HasForeignKey("TrainerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_fitness.Models.TrainingType", "TrainType")
                        .WithMany("Meeting")
                        .HasForeignKey("TrainingTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
