@model IEnumerable<web_fitness.Models.Meeting>

@{
    ViewData["Title"] = "Meetings";
}
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>$(document).ready(() => {
        $('#closeToast').click(() => $('.toast').toast('hide'));
        $('#StartDate').prop('value', new Date().toLocaleDateString('en-CA'));

        const validate = () => {

            let isError = false;
            const errorsList = $('<ul/>');

            // Validate Price
            const numbersRegex = /^[0-9]+$/; // only numbers
            const price = $('#Price').val();

            if (price && !price.match(numbersRegex)) {
                const error = $('<li/>').text('Price can only contain numbers');
                errorsList.append(error);
                isError = true;
            }

            if (price && Number.isInteger(price) && price < 0) {
                const error = $('<li/>').text('Price can only be a positive number');
                errorsList.append(error);
                isError = true;
            }


            // Validate City

            const city = $('#City').val();
            const textRegext = /^[a-zA-Z ]*$/; // only text

            if (city && !city.match(textRegext)) {
                const error = $('<li/>').text('City can only contain letters');
                errorsList.append(error);
                isError = true;
            }

            if (isError) {
                $('.toast').toast('show')
                $('#toastBody').html(errorsList);
                $('#search').prop('disabled', true)
            } else {
                $('#search').prop('disabled', false);
            }
        };

        $('#Price').change(validate);
        $('#City').change(validate);

    });</script>

<div aria-live="polite" aria-atomic="true" style="position: relative;">
    <div class="toast" style="position: fixed; top: 86px; right: 24px;" data-delay="10000">
        <div class="toast-header">
            <strong class="mr-auto">Web Fitness</strong>
            <small>Error</small>
            <button id="closeToast" type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div id="toastBody" class="toast-body text-danger pr-4 mr-3">
        </div>
    </div>
</div>


<h1>Meetings</h1>

@if (this.User.IsInRole("Admin") || this.User.IsInRole("Trainer"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form class="form-inline" asp-controller="Meetings" asp-action="MultipleSearch" style="float:left;">
    <input id="StartDate" class="form-control blackBorder mr-2" type="date" name="startDate" placeholder="StartDate">
    <input id="City" class="form-control blackBorder mr-2" type="text" id="city" placeholder="City" name="city">
    <input class="form-control blackBorder mr-2" type="text" id="Method" placeholder="Method" name="typename">
    <input id="Price" class="form-control blackBorder mr-2" type="number" min="0" id="price" placeholder="Maximum Price" name="price">
    <button type="submit" class="btn btn-dark submitButtons" id="search">Search</button>
</form>

<div class="web-fitness-card" style="margin-top: 80px">
    <div id="table">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Topic
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Trainer)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.MeetDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Trainer.City)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.TrainType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Trainer.FirstName) @Html.DisplayFor(modelItem => item.Trainer.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MeetDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price) ₪
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Trainer.City)
                        </td>
                        <td>
                            @if (this.User.IsInRole("Admin"))
                            {
                                <span>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.MeetID }) |
                                </span>
                            }

                            @Html.ActionLink("Details", "Details", new { id = item.MeetID })

                            @if (this.User.IsInRole("Admin"))
                            {
                                <span>
                                    | @Html.ActionLink("Delete", "Delete", new { id = item.MeetID })
                                </span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>